# TODO: setup the network and disable the public ports
networks:
  internal_net:

services:
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    networks:
      internal_net:
    ports:
      - 5672:5672
      - 15672:15672
    restart: "on-failure"
    # WARN: delete these variables and use the env file
    environment:
      - RABBITMQ_DEFAULT_USER=userf
      - RABBITMQ_DEFAULT_PASS=userd

  redis:
    container_name:  redis
    image: redis:latest
    restart: "on-failure"
    networks:
      internal_net:
    ports: 
      - 6060:6379
    command: redis-server --save 60 1 --loglevel warning

  server: 
    container_name: server
    image: python:3.11-alpine
    restart: "on-failure"
    networks: 
      - internal_net
    working_dir: /home/server
    volumes:
      - ./django_app/:/home/server/
      - ./shared_data:/home/server/media
    ports:
      - 7070:8080
    depends_on: 
      celery: 
        condition: service_started
    tty: true
    entrypoint: sh -c "pip install -r requirements.txt --root-user-action=ignore && python manage.py makemigrations && python manage.py migrate && python manage.py runserver server:8080"

  celery:
    container_name: celery
    build: ./celery
    networks:
      internal_net:
    volumes:
      - ./celery/:/home/
      - ./shared_data:/home/media
    env_file: .env
    restart: "on-failure"
    depends_on:
      rabbitmq: 
        condition: service_started
      redis: 
        condition: service_started
